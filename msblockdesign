<<<<<code blocks and algorithm:>>>>>

Welcome message:

   
Creators: 


Menu: 
Start [from last state] / New / exit / [enter for pause]

#######################################################
GAME ENGINE:
blocks and procs(?)
# hotspot generator
= seperate file for matrix to be modified by hotspots. 
= when looping the value of a coordinate will match with another
= method for returning result
#Inputs player coordinates
[###define cutoff point for player turn###]
check = if player coordinate returns 'mine' then +=1
      = if player coordinate returns 'no mine' then nothing

score counter

check winner


#######################################################
ALGORITHM: iterations and recursions

within the new matrix with fixed hotspot positions representing mines player 1 selects a coordinate.
coordinate is cross referenced with hotspots to return true or false
if player coordinate= m then +1[if = nil then nothing]
player 2 takes their turn
checking is the same
repeat 'm's have been uncovered [predefined number of mines to break at?]

>>>>>>>>>>>>>>>>>>>>possible solution for checking coordinates<
>>>>>>>>>>>>>>>taken from: https://stackoverflow.com/questions/33990474/ruby-minesweeper<<<<<<<<<<<

while true
  coords = gets.chomp.split
  i = coords[0].to_i
  j = coords[1].to_i

  if hint[i][j] == "*"
    puts "you lose"
    break if game over
  end

  game[i][j] = hint[i][j]

  pp_board game

  puts "\nHint"
  pp_board hint
end




#########################################################

Error message [for invalid input]+[hints]:


Player win message + player lose: 


Finish message:




